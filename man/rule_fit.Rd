% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rule_fit.R
\name{rule_fit}
\alias{rule_fit}
\title{The RuleFit function}
\usage{
rule_fit(
  HPO,
  ntree = 200,
  max.depth = 3,
  rule.filter = 10,
  bootstrap.rounds = 100,
  rule.extract.cores = 4,
  kappa.cores = 2,
  lasso.cores = 4,
  ranger.and.rulefit = FALSE
)
}
\arguments{
\item{ntree}{number of trees to be built, defaults to 200}

\item{max.depth}{maximum tree depth, defaults to 3}

\item{rule.filter}{filter the top n rules based on kappa statistic. If NULL, the rules are filter above a kappa of 0.05}

\item{bootstrap.rounds}{number of bootstrap rounds for the outer loop of the LASSO cross-validation, defaults to 100}

\item{rule.extract.cores}{number of cores for parallel, defaults to 4. This is specifically for the varpp rule extract step (less memory hungry than the cv.glmnet step)}

\item{kappa.cores}{number of cores used for the rule filtering by kappa. This needs to be seperate, as it is quite memory intensive when the input + rule data is very large. Defaults to 2.}

\item{lasso.cores}{number of cores for the cv.glmnet step, as this is quite memory hungry, it is seperated}

\item{ranger.and.rulefit}{in some cases, if not all, we want to be able to report the Random forest and the RuleFit accuracy together, to see how much better one performs over the other.
This defaults to TRUE}

\item{data}{a data set with features, an outcome variable and an index variable (probably created within the function in the end)}

\item{y}{the outcome variable name}

\item{two_level_bootstrap}{this is TRUE by default and is necessar when sampling has to be performed on agene and gene variant level}
}
\value{
A list of predictions for the outcome. Further, a variable importance list for all rules and variables tested.
}
\description{
This is rulefit in general. When not using the VARPP framework, this function allows to perform rulefit on any data set with a
binary outcome.
}
